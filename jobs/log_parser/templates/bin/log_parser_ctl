#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/log_parser/helpers/ctl_setup.sh 'log_parser'

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8
<% if 'auto' == p('logstash_parser.workers') %>
# 1 logstash worker / CPU core
export LOGSTASH_WORKERS=`grep -c ^processor /proc/cpuinfo`
<% else %>
export LOGSTASH_WORKERS=<%= p('logstash_parser.workers') %>
<% end %>

LOCAL_PLUGINS_DIR=/var/vcap/packages/logstash/logstash/vendor/bundle/jruby/1.9/gems
LOCAL_PLUGINS_NAME_LIST=$( cat /var/vcap/packages/logstash/plugins-default.list | tr "\n" ' ' )
LOCAL_PLUGINS_NAME_LIST=" ${LOCAL_PLUGINS_NAME_LIST} <%= p('logstash_parser.plugins').map { | plugin | plugin.first[0] }.join(' ') %> "

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    # store this processes pid in $PIDFILE, since the exec below doesn't daemonize
    echo $$ > $PIDFILE

    # install new plugins
    <% p('logstash_parser.plugins').each do | plugin | pname, psource = plugin.first %>
      if ! ls ${LOCAL_PLUGINS_DIR}/<%= pname %>-* 1> /dev/null 2>&1 ; then
        <% if psource =~ /:\/\// %>
          wget -O '<%= psource %>.gem' '<% psource %>'
          /var/vcap/packages/logstash/logstash/bin/plugin install '<%= psource %>.gem'
          rm '<%= psource %>.gem'
        <% else %>
          /var/vcap/packages/logstash/logstash/bin/plugin install '<%= pname %>'
        <% end %>
      fi
    <% end %>

    # remove old plugins

    for LOCAL_PLUGIN_NAME in $( /var/vcap/packages/logstash/logstash/bin/plugin list ) ; do
      if ! [[ "${LOCAL_PLUGINS_NAME_LIST}" =~ (^| )$LOCAL_PLUGIN_NAME($| ) ]] ; then
        /var/vcap/packages/logstash/logstash/bin/plugin uninstall "${LOCAL_PLUGIN_NAME}"
      fi
    done

    # construct a complete config file from all the fragments
    cat ${JOB_DIR}/config/input_redis_and_output_elasticsearch.conf > ${JOB_DIR}/config/logstash.conf
    cat ${JOB_DIR}/config/filters_pre.conf >> ${JOB_DIR}/config/logstash.conf
    cat ${JOB_DIR}/config/logstash-filters-common.conf >> ${JOB_DIR}/config/logstash.conf

    <% if '' != p('logstash_parser.filters') %>
      cat ${JOB_DIR}/config/filters_override.conf >> ${JOB_DIR}/config/logstash.conf
    <% end %>

    cat ${JOB_DIR}/config/filters_post.conf >> ${JOB_DIR}/config/logstash.conf

    exec chpst -u vcap /var/vcap/packages/logstash/logstash/bin/logstash agent \
         -f ${JOB_DIR}/config/logstash.conf -w ${LOGSTASH_WORKERS} \
         >>$LOG_DIR/$JOB_NAME.stdout.log \
         2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: ingestor_syslog_ctl {start|stop}"

    ;;

esac
exit 0
